<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
	">
	<context:component-scan base-package="com.formation.computerdatabase.persistence"></context:component-scan>
	<context:property-placeholder location="classpath:dao.properties" />
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="close">
        <property name="dataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlDataSource"/>
        <property name="maximumPoolSize" value="1000" />
        <property name="maxLifetime" value="5000" />
        <property name="idleTimeout" value="5000" />
        <property name="dataSourceProperties">
	        <props>
	            <prop key="url">${url}</prop>
	            <prop key="user">${utilisateur}</prop>
	            <prop key="password">${password}</prop>
	             <prop key="prepStmtCacheSize">500</prop>
	             <prop key="prepStmtCacheSqlLimit">2048</prop>
	             <prop key="cachePrepStmts">true</prop>
	             <prop key="useServerPrepStmts">true</prop>
	        </props>
        </property>
    </bean>
    
    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="com.formation.computerdatabase.core.model" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"></property>
        <property name="jpaProperties">
        	<props>
        		<prop key="hibernate.show_sql">false</prop>
        		<prop key="hibernate.hbm2ddl.auto">update</prop>
        		<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
        		
        		
        		<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
        		<prop key="hibernate.cache.use_query_cache">true</prop>
        		<prop key="hibernate.cache.use_second_level_cache">true</prop>
        		<prop key="net.sf.ehcache.configurationResourceName">classpath:ehcache.xml</prop>
      
        	</props>
        </property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

	 <!--  
	 <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	-->
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="computers"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="companies"/>
            </set>
        </property>
    </bean>
    
	<cache:annotation-driven />
	-->
</beans>
